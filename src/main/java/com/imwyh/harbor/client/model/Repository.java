/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.imwyh.harbor.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.imwyh.harbor.client.model.Label;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Repository
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-05-14T14:29:11.153+08:00[Asia/Shanghai]")public class Repository {

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("project_id")
  private Integer projectId = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("pull_count")
  private Integer pullCount = null;

  @SerializedName("star_count")
  private Integer starCount = null;

  @SerializedName("tags_count")
  private Integer tagsCount = null;

  @SerializedName("labels")
  private List<Label> labels = null;

  @SerializedName("creation_time")
  private String creationTime = null;

  @SerializedName("update_time")
  private String updateTime = null;
  public Repository id(Integer id) {
    this.id = id;
    return this;
  }

  

  /**
  * The ID of repository.
  * @return id
  **/
  @Schema(description = "The ID of repository.")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }
  public Repository name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * The name of repository.
  * @return name
  **/
  @Schema(description = "The name of repository.")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public Repository projectId(Integer projectId) {
    this.projectId = projectId;
    return this;
  }

  

  /**
  * The project ID of repository.
  * @return projectId
  **/
  @Schema(description = "The project ID of repository.")
  public Integer getProjectId() {
    return projectId;
  }
  public void setProjectId(Integer projectId) {
    this.projectId = projectId;
  }
  public Repository description(String description) {
    this.description = description;
    return this;
  }

  

  /**
  * The description of repository.
  * @return description
  **/
  @Schema(description = "The description of repository.")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }
  public Repository pullCount(Integer pullCount) {
    this.pullCount = pullCount;
    return this;
  }

  

  /**
  * The pull count of repository.
  * @return pullCount
  **/
  @Schema(description = "The pull count of repository.")
  public Integer getPullCount() {
    return pullCount;
  }
  public void setPullCount(Integer pullCount) {
    this.pullCount = pullCount;
  }
  public Repository starCount(Integer starCount) {
    this.starCount = starCount;
    return this;
  }

  

  /**
  * The star count of repository.
  * @return starCount
  **/
  @Schema(description = "The star count of repository.")
  public Integer getStarCount() {
    return starCount;
  }
  public void setStarCount(Integer starCount) {
    this.starCount = starCount;
  }
  public Repository tagsCount(Integer tagsCount) {
    this.tagsCount = tagsCount;
    return this;
  }

  

  /**
  * The tags count of repository.
  * @return tagsCount
  **/
  @Schema(description = "The tags count of repository.")
  public Integer getTagsCount() {
    return tagsCount;
  }
  public void setTagsCount(Integer tagsCount) {
    this.tagsCount = tagsCount;
  }
  public Repository labels(List<Label> labels) {
    this.labels = labels;
    return this;
  }

  public Repository addLabelsItem(Label labelsItem) {
    if (this.labels == null) {
      this.labels = new ArrayList<Label>();
    }
    this.labels.add(labelsItem);
    return this;
  }

  /**
  * The label list.
  * @return labels
  **/
  @Schema(description = "The label list.")
  public List<Label> getLabels() {
    return labels;
  }
  public void setLabels(List<Label> labels) {
    this.labels = labels;
  }
  public Repository creationTime(String creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  

  /**
  * The creation time of repository.
  * @return creationTime
  **/
  @Schema(description = "The creation time of repository.")
  public String getCreationTime() {
    return creationTime;
  }
  public void setCreationTime(String creationTime) {
    this.creationTime = creationTime;
  }
  public Repository updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  

  /**
  * The update time of repository.
  * @return updateTime
  **/
  @Schema(description = "The update time of repository.")
  public String getUpdateTime() {
    return updateTime;
  }
  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Repository repository = (Repository) o;
    return Objects.equals(this.id, repository.id) &&
        Objects.equals(this.name, repository.name) &&
        Objects.equals(this.projectId, repository.projectId) &&
        Objects.equals(this.description, repository.description) &&
        Objects.equals(this.pullCount, repository.pullCount) &&
        Objects.equals(this.starCount, repository.starCount) &&
        Objects.equals(this.tagsCount, repository.tagsCount) &&
        Objects.equals(this.labels, repository.labels) &&
        Objects.equals(this.creationTime, repository.creationTime) &&
        Objects.equals(this.updateTime, repository.updateTime);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(id, name, projectId, description, pullCount, starCount, tagsCount, labels, creationTime, updateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Repository {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    pullCount: ").append(toIndentedString(pullCount)).append("\n");
    sb.append("    starCount: ").append(toIndentedString(starCount)).append("\n");
    sb.append("    tagsCount: ").append(toIndentedString(tagsCount)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
