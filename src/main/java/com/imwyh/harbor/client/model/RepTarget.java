/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.imwyh.harbor.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;

/**
 * RepTarget
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-05-14T14:29:11.153+08:00[Asia/Shanghai]")public class RepTarget {

  @SerializedName("id")
  private Long id = null;

  @SerializedName("endpoint")
  private String endpoint = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("username")
  private String username = null;

  @SerializedName("password")
  private String password = null;

  @SerializedName("type")
  private Integer type = null;

  @SerializedName("insecure")
  private Boolean insecure = null;

  @SerializedName("creation_time")
  private String creationTime = null;

  @SerializedName("update_time")
  private String updateTime = null;
  public RepTarget id(Long id) {
    this.id = id;
    return this;
  }

  

  /**
  * The target ID.
  * @return id
  **/
  @Schema(description = "The target ID.")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }
  public RepTarget endpoint(String endpoint) {
    this.endpoint = endpoint;
    return this;
  }

  

  /**
  * The target address URL string.
  * @return endpoint
  **/
  @Schema(description = "The target address URL string.")
  public String getEndpoint() {
    return endpoint;
  }
  public void setEndpoint(String endpoint) {
    this.endpoint = endpoint;
  }
  public RepTarget name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * The target name.
  * @return name
  **/
  @Schema(description = "The target name.")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public RepTarget username(String username) {
    this.username = username;
    return this;
  }

  

  /**
  * The target server username.
  * @return username
  **/
  @Schema(description = "The target server username.")
  public String getUsername() {
    return username;
  }
  public void setUsername(String username) {
    this.username = username;
  }
  public RepTarget password(String password) {
    this.password = password;
    return this;
  }

  

  /**
  * The target server password.
  * @return password
  **/
  @Schema(description = "The target server password.")
  public String getPassword() {
    return password;
  }
  public void setPassword(String password) {
    this.password = password;
  }
  public RepTarget type(Integer type) {
    this.type = type;
    return this;
  }

  

  /**
  * Reserved field.
  * @return type
  **/
  @Schema(description = "Reserved field.")
  public Integer getType() {
    return type;
  }
  public void setType(Integer type) {
    this.type = type;
  }
  public RepTarget insecure(Boolean insecure) {
    this.insecure = insecure;
    return this;
  }

  

  /**
  * Whether or not the certificate will be verified when Harbor tries to access the server.
  * @return insecure
  **/
  @Schema(description = "Whether or not the certificate will be verified when Harbor tries to access the server.")
  public Boolean isInsecure() {
    return insecure;
  }
  public void setInsecure(Boolean insecure) {
    this.insecure = insecure;
  }
  public RepTarget creationTime(String creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  

  /**
  * The create time of the policy.
  * @return creationTime
  **/
  @Schema(description = "The create time of the policy.")
  public String getCreationTime() {
    return creationTime;
  }
  public void setCreationTime(String creationTime) {
    this.creationTime = creationTime;
  }
  public RepTarget updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  

  /**
  * The update time of the policy.
  * @return updateTime
  **/
  @Schema(description = "The update time of the policy.")
  public String getUpdateTime() {
    return updateTime;
  }
  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RepTarget repTarget = (RepTarget) o;
    return Objects.equals(this.id, repTarget.id) &&
        Objects.equals(this.endpoint, repTarget.endpoint) &&
        Objects.equals(this.name, repTarget.name) &&
        Objects.equals(this.username, repTarget.username) &&
        Objects.equals(this.password, repTarget.password) &&
        Objects.equals(this.type, repTarget.type) &&
        Objects.equals(this.insecure, repTarget.insecure) &&
        Objects.equals(this.creationTime, repTarget.creationTime) &&
        Objects.equals(this.updateTime, repTarget.updateTime);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(id, endpoint, name, username, password, type, insecure, creationTime, updateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RepTarget {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    insecure: ").append(toIndentedString(insecure)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
