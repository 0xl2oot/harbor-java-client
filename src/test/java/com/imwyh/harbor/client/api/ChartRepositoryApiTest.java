/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.imwyh.harbor.client.api;

import com.imwyh.harbor.client.ApiException;
import com.imwyh.harbor.client.model.ChartInfoEntry;
import java.io.File;
import com.imwyh.harbor.client.model.Label;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ChartRepositoryApi
 */
@Ignore
public class ChartRepositoryApiTest {

    private final ChartRepositoryApi api = new ChartRepositoryApi();

    /**
     * Upload a chart file to the defult &#x27;library&#x27; project.
     *
     * Upload a chart file to the default &#x27;library&#x27; project. Uploading together with the prov file at the same time is also supported.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void chartrepoChartsPostTest() throws ApiException {
        File chart = null;
        File prov = null;
        api.chartrepoChartsPost(chart, prov);

        // TODO: test validations
    }
    /**
     * Check the health of chart repository service.
     *
     * Check the health of chart repository service.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void chartrepoHealthGetTest() throws ApiException {
        Object response = api.chartrepoHealthGet();

        // TODO: test validations
    }
    /**
     * Get all the charts under the specified project
     *
     * Get all the charts under the specified project
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void chartrepoRepoChartsGetTest() throws ApiException {
        String repo = null;
        List<ChartInfoEntry> response = api.chartrepoRepoChartsGet(repo);

        // TODO: test validations
    }
    /**
     * Delete all the versions of the specified chart
     *
     * Delete all the versions of the specified chart
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void chartrepoRepoChartsNameDeleteTest() throws ApiException {
        String repo = null;
        String name = null;
        api.chartrepoRepoChartsNameDelete(repo, name);

        // TODO: test validations
    }
    /**
     * Get all the versions of the specified chart
     *
     * Get all the versions of the specified chart
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void chartrepoRepoChartsNameGetTest() throws ApiException {
        String repo = null;
        String name = null;
        api.chartrepoRepoChartsNameGet(repo, name);

        // TODO: test validations
    }
    /**
     * Delete the specified chart version
     *
     * Delete the specified chart version
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void chartrepoRepoChartsNameVersionDeleteTest() throws ApiException {
        String repo = null;
        String name = null;
        String version = null;
        api.chartrepoRepoChartsNameVersionDelete(repo, name, version);

        // TODO: test validations
    }
    /**
     * Get the specified chart version
     *
     * Get the specified chart version
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void chartrepoRepoChartsNameVersionGetTest() throws ApiException {
        String repo = null;
        String name = null;
        String version = null;
        api.chartrepoRepoChartsNameVersionGet(repo, name, version);

        // TODO: test validations
    }
    /**
     * Upload a chart file to the specified project.
     *
     * Upload a chart file to the specified project. With this API, the corresponding provance file can be uploaded together with chart file at once.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void chartrepoRepoChartsPostTest() throws ApiException {
        String repo = null;
        File chart = null;
        File prov = null;
        api.chartrepoRepoChartsPost(repo, chart, prov);

        // TODO: test validations
    }
    /**
     * Upload a provance file to the specified project.
     *
     * Upload a provance file to the specified project. The provance file should be targeted for an existing chart file.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void chartrepoRepoProvPostTest() throws ApiException {
        String repo = null;
        File prov = null;
        api.chartrepoRepoProvPost(repo, prov);

        // TODO: test validations
    }
    /**
     * Return the attahced labels of chart.
     *
     * Return the attahced labels of the specified chart version.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void chartreporepoChartsnameversionLabelsGetTest() throws ApiException {
        String repo = null;
        String name = null;
        String version = null;
        api.chartreporepoChartsnameversionLabelsGet(repo, name, version);

        // TODO: test validations
    }
    /**
     * Mark label to chart.
     *
     * Mark label to the specified chart version.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void chartreporepoChartsnameversionLabelsPostTest() throws ApiException {
        Label body = null;
        String repo = null;
        String name = null;
        String version = null;
        api.chartreporepoChartsnameversionLabelsPost(body, repo, name, version);

        // TODO: test validations
    }
    /**
     * Remove label from chart.
     *
     * Remove label from the specified chart version.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void chartreporepoChartsnameversionLabelsidDeleteTest() throws ApiException {
        String repo = null;
        String name = null;
        String version = null;
        Integer id = null;
        api.chartreporepoChartsnameversionLabelsidDelete(repo, name, version, id);

        // TODO: test validations
    }
}
