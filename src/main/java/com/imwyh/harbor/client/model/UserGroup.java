/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.imwyh.harbor.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;

/**
 * UserGroup
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-05-14T14:29:11.153+08:00[Asia/Shanghai]")public class UserGroup {

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("group_name")
  private String groupName = null;

  @SerializedName("group_type")
  private Integer groupType = null;

  @SerializedName("ldap_group_dn")
  private String ldapGroupDn = null;
  public UserGroup id(Integer id) {
    this.id = id;
    return this;
  }

  

  /**
  * The ID of the user group
  * @return id
  **/
  @Schema(description = "The ID of the user group")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }
  public UserGroup groupName(String groupName) {
    this.groupName = groupName;
    return this;
  }

  

  /**
  * The name of the user group
  * @return groupName
  **/
  @Schema(description = "The name of the user group")
  public String getGroupName() {
    return groupName;
  }
  public void setGroupName(String groupName) {
    this.groupName = groupName;
  }
  public UserGroup groupType(Integer groupType) {
    this.groupType = groupType;
    return this;
  }

  

  /**
  * The group type, 1 for LDAP group.
  * @return groupType
  **/
  @Schema(description = "The group type, 1 for LDAP group.")
  public Integer getGroupType() {
    return groupType;
  }
  public void setGroupType(Integer groupType) {
    this.groupType = groupType;
  }
  public UserGroup ldapGroupDn(String ldapGroupDn) {
    this.ldapGroupDn = ldapGroupDn;
    return this;
  }

  

  /**
  * The DN of the LDAP group if group type is 1 (LDAP group).
  * @return ldapGroupDn
  **/
  @Schema(description = "The DN of the LDAP group if group type is 1 (LDAP group).")
  public String getLdapGroupDn() {
    return ldapGroupDn;
  }
  public void setLdapGroupDn(String ldapGroupDn) {
    this.ldapGroupDn = ldapGroupDn;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserGroup userGroup = (UserGroup) o;
    return Objects.equals(this.id, userGroup.id) &&
        Objects.equals(this.groupName, userGroup.groupName) &&
        Objects.equals(this.groupType, userGroup.groupType) &&
        Objects.equals(this.ldapGroupDn, userGroup.ldapGroupDn);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(id, groupName, groupType, ldapGroupDn);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserGroup {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    groupName: ").append(toIndentedString(groupName)).append("\n");
    sb.append("    groupType: ").append(toIndentedString(groupType)).append("\n");
    sb.append("    ldapGroupDn: ").append(toIndentedString(ldapGroupDn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
