/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.imwyh.harbor.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.imwyh.harbor.client.model.Tags;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * JobStatus
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-05-14T14:29:11.153+08:00[Asia/Shanghai]")public class JobStatus {

  @SerializedName("id")
  private Long id = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("repository")
  private String repository = null;

  @SerializedName("policy_id")
  private Long policyId = null;

  @SerializedName("operation")
  private String operation = null;

  @SerializedName("tags")
  private List<Tags> tags = null;

  @SerializedName("creation_time")
  private String creationTime = null;

  @SerializedName("update_time")
  private String updateTime = null;
  public JobStatus id(Long id) {
    this.id = id;
    return this;
  }

  

  /**
  * The job ID.
  * @return id
  **/
  @Schema(description = "The job ID.")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }
  public JobStatus status(String status) {
    this.status = status;
    return this;
  }

  

  /**
  * The status of the job.
  * @return status
  **/
  @Schema(description = "The status of the job.")
  public String getStatus() {
    return status;
  }
  public void setStatus(String status) {
    this.status = status;
  }
  public JobStatus repository(String repository) {
    this.repository = repository;
    return this;
  }

  

  /**
  * The repository handled by the job.
  * @return repository
  **/
  @Schema(description = "The repository handled by the job.")
  public String getRepository() {
    return repository;
  }
  public void setRepository(String repository) {
    this.repository = repository;
  }
  public JobStatus policyId(Long policyId) {
    this.policyId = policyId;
    return this;
  }

  

  /**
  * The ID of the policy that triggered this job.
  * @return policyId
  **/
  @Schema(description = "The ID of the policy that triggered this job.")
  public Long getPolicyId() {
    return policyId;
  }
  public void setPolicyId(Long policyId) {
    this.policyId = policyId;
  }
  public JobStatus operation(String operation) {
    this.operation = operation;
    return this;
  }

  

  /**
  * The operation of the job.
  * @return operation
  **/
  @Schema(description = "The operation of the job.")
  public String getOperation() {
    return operation;
  }
  public void setOperation(String operation) {
    this.operation = operation;
  }
  public JobStatus tags(List<Tags> tags) {
    this.tags = tags;
    return this;
  }

  public JobStatus addTagsItem(Tags tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<Tags>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
  * The repository&#x27;s used tag list.
  * @return tags
  **/
  @Schema(description = "The repository's used tag list.")
  public List<Tags> getTags() {
    return tags;
  }
  public void setTags(List<Tags> tags) {
    this.tags = tags;
  }
  public JobStatus creationTime(String creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  

  /**
  * The creation time of the job.
  * @return creationTime
  **/
  @Schema(description = "The creation time of the job.")
  public String getCreationTime() {
    return creationTime;
  }
  public void setCreationTime(String creationTime) {
    this.creationTime = creationTime;
  }
  public JobStatus updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  

  /**
  * The update time of the job.
  * @return updateTime
  **/
  @Schema(description = "The update time of the job.")
  public String getUpdateTime() {
    return updateTime;
  }
  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobStatus jobStatus = (JobStatus) o;
    return Objects.equals(this.id, jobStatus.id) &&
        Objects.equals(this.status, jobStatus.status) &&
        Objects.equals(this.repository, jobStatus.repository) &&
        Objects.equals(this.policyId, jobStatus.policyId) &&
        Objects.equals(this.operation, jobStatus.operation) &&
        Objects.equals(this.tags, jobStatus.tags) &&
        Objects.equals(this.creationTime, jobStatus.creationTime) &&
        Objects.equals(this.updateTime, jobStatus.updateTime);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(id, status, repository, policyId, operation, tags, creationTime, updateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobStatus {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    repository: ").append(toIndentedString(repository)).append("\n");
    sb.append("    policyId: ").append(toIndentedString(policyId)).append("\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
